{"ast":null,"code":"import _classCallCheck from \"/Users/justinchitla/Desktop/COMP585/fantasybball/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/justinchitla/Desktop/COMP585/fantasybball/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/justinchitla/Desktop/COMP585/fantasybball/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/justinchitla/Desktop/COMP585/fantasybball/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/justinchitla/Desktop/COMP585/fantasybball/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/justinchitla/Desktop/COMP585/fantasybball/src/components/Graph.js\";\nimport React from \"react\";\nimport Plot from 'react-plotly.js';\n\nvar Graph =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Graph, _React$Component);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Graph).call(this));\n    _this.graphType = props.graphType;\n    _this.data = props.data;\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"render\",\n    value: function render() {\n      switch (this.graphStyle) {\n        case \"pieStyle\":\n          this.setState({\n            graphTitle: \"Pie Chart\",\n            graphDescription: \"A chart that uses \\\"pie slices\\\" to show relative sizes of data. The chart is divided into sectors, where each sector shows the relative size of each value.\"\n          });\n          break;\n\n        case \"barStyle\":\n          return React.createElement(Plot, {\n            data: [{\n              type: 'bar',\n              x: [1, 2, 3],\n              y: [2, 5, 3]\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          });\n          break;\n\n        case \"lineStyle\":\n          this.setState({\n            graphTitle: \"Line Graph\",\n            graphDescription: \"A chart which displays information as a series of data points called 'markers' connected by straight line segments.\"\n          });\n          break;\n\n        default:\n          return React.createElement(Plot, {\n            data: [{\n              x: [1, 2, 4],\n              y: [2, 6, 3],\n              type: 'scatter',\n              mode: 'lines+points',\n              marker: {\n                color: 'red'\n              }\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          });\n          break;\n      }\n    }\n  }]);\n\n  return Graph;\n}(React.Component);\n\nexport default Graph;","map":{"version":3,"sources":["/Users/justinchitla/Desktop/COMP585/fantasybball/src/components/Graph.js"],"names":["React","Plot","Graph","props","graphType","data","graphStyle","setState","graphTitle","graphDescription","type","x","y","mode","marker","color","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf;AACA,UAAKC,SAAL,GAAiBD,KAAK,CAACC,SAAvB;AACA,UAAKC,IAAL,GAAYF,KAAK,CAACE,IAAlB;AAHe;AAIlB;;;;6BAEQ;AACL,cAAO,KAAKC,UAAZ;AACI,aAAK,UAAL;AACI,eAAKC,QAAL,CAAc;AAAEC,YAAAA,UAAU,EAAE,WAAd;AACEC,YAAAA,gBAAgB,EAAE;AADpB,WAAd;AAEA;;AACJ,aAAK,UAAL;AACI,iBACI,oBAAC,IAAD;AACI,YAAA,IAAI,EAAE,CACF;AACAC,cAAAA,IAAI,EAAE,KADN;AAEAC,cAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFH;AAGAC,cAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAHH,aADE,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWA;;AACJ,aAAK,WAAL;AACI,eAAKL,QAAL,CAAc;AAAEC,YAAAA,UAAU,EAAE,YAAd;AACEC,YAAAA,gBAAgB,EAAE;AADpB,WAAd;AAEA;;AACJ;AACI,iBACI,oBAAC,IAAD;AACI,YAAA,IAAI,EAAE,CACF;AACAE,cAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADH;AAEAC,cAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFH;AAGAF,cAAAA,IAAI,EAAE,SAHN;AAIAG,cAAAA,IAAI,EAAE,cAJN;AAKAC,cAAAA,MAAM,EAAE;AAACC,gBAAAA,KAAK,EAAE;AAAR;AALR,aADE,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaA;AApCR;AAuCH;;;;EA/Cef,KAAK,CAACgB,S;;AAkD1B,eAAed,KAAf","sourcesContent":["import React from \"react\"\nimport Plot from 'react-plotly.js'\n\nclass Graph extends React.Component {\n    constructor(props) {\n        super();\n        this.graphType = props.graphType;\n        this.data = props.data;\n    }\n    \n    render() {\n        switch(this.graphStyle) {\n            case \"pieStyle\":\n                this.setState({ graphTitle: \"Pie Chart\",\n                                graphDescription: \"A chart that uses \\\"pie slices\\\" to show relative sizes of data. The chart is divided into sectors, where each sector shows the relative size of each value.\"});\n                break;\n            case \"barStyle\":\n                return(\n                    <Plot \n                        data={[\n                            {\n                            type: 'bar',\n                            x: [1, 2, 3],\n                            y: [2, 5, 3]\n                            }\n                        ]}\n                    />\n                )\n                break;\n            case \"lineStyle\":\n                this.setState({ graphTitle: \"Line Graph\",\n                                graphDescription: \"A chart which displays information as a series of data points called 'markers' connected by straight line segments.\"});\n                break;\n            default:\n                return(\n                    <Plot \n                        data={[\n                            {\n                            x: [1, 2, 4],\n                            y: [2, 6, 3],\n                            type: 'scatter',\n                            mode: 'lines+points',\n                            marker: {color: 'red'},\n                            }\n                        ]}\n                    />\n                )\n                break;\n        }\n    \n    }\n}\n\nexport default Graph"]},"metadata":{},"sourceType":"module"}