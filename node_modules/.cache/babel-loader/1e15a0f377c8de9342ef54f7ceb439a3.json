{"ast":null,"code":"import _classCallCheck from \"/Users/justinchitla/Desktop/COMP585/fantasybball/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/justinchitla/Desktop/COMP585/fantasybball/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/justinchitla/Desktop/COMP585/fantasybball/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/justinchitla/Desktop/COMP585/fantasybball/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/justinchitla/Desktop/COMP585/fantasybball/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from \"react\";\nimport Plot from 'react-plotly.js';\n\nvar Graph =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Graph, _React$Component);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Graph).call(this));\n    _this.graphType = _this.props.graphType;\n    console.log(_this.props.graphType);\n    _this.data = props.data;\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"render\",\n    value: function render() {//        switch(this.graphType) {\n      ////            case \"pieStyle\":\n      ////                this.setState({ graphTitle: \"Pie Chart\",\n      ////                                graphDescription: \"A chart that uses \\\"pie slices\\\" to show relative sizes of data. The chart is divided into sectors, where each sector shows the relative size of each value.\"});\n      ////                break;\n      //            case \"barStyle\":\n      //                return(\n      //                    <Plot \n      //                        data={[\n      //                            {\n      //                            type: 'bar',\n      //                            x: [1, 2, 3],\n      //                            y: [2, 5, 3]\n      //                            }\n      //                        ]}\n      //                    />\n      //                )\n      ////            case \"lineStyle\":\n      ////                this.setState({ graphTitle: \"Line Graph\",\n      ////                                graphDescription: \"A chart which displays information as a series of data points called 'markers' connected by straight line segments.\"});\n      ////                break;\n      //            default:\n      //                return(\n      //                    <Plot \n      //                        data={[\n      //                            {\n      //                            x: [1, 2, 4],\n      //                            y: [2, 6, 3],\n      //                            type: 'scatter',\n      //                            mode: 'lines+points',\n      //                            marker: {color: 'red'},\n      //                            }\n      //                        ]}\n      //                    />\n      //                )\n      //        }\n    }\n  }]);\n\n  return Graph;\n}(React.Component);\n\nexport default Graph;","map":{"version":3,"sources":["/Users/justinchitla/Desktop/COMP585/fantasybball/src/components/Graph.js"],"names":["React","Plot","Graph","props","graphType","console","log","data","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf;AACA,UAAKC,SAAL,GAAiB,MAAKD,KAAL,CAAWC,SAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAKH,KAAL,CAAWC,SAAvB;AACA,UAAKG,IAAL,GAAYJ,KAAK,CAACI,IAAlB;AAJe;AAKlB;;;;6BAEQ,CACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEK;;;;EA9CeP,KAAK,CAACQ,S;;AAiD1B,eAAeN,KAAf","sourcesContent":["import React from \"react\"\nimport Plot from 'react-plotly.js'\n\nclass Graph extends React.Component {\n    constructor(props) {\n        super();\n        this.graphType = this.props.graphType;\n        console.log(this.props.graphType);\n        this.data = props.data;\n    }\n    \n    render() {\n//        switch(this.graphType) {\n////            case \"pieStyle\":\n////                this.setState({ graphTitle: \"Pie Chart\",\n////                                graphDescription: \"A chart that uses \\\"pie slices\\\" to show relative sizes of data. The chart is divided into sectors, where each sector shows the relative size of each value.\"});\n////                break;\n//            case \"barStyle\":\n//                return(\n//                    <Plot \n//                        data={[\n//                            {\n//                            type: 'bar',\n//                            x: [1, 2, 3],\n//                            y: [2, 5, 3]\n//                            }\n//                        ]}\n//                    />\n//                )\n////            case \"lineStyle\":\n////                this.setState({ graphTitle: \"Line Graph\",\n////                                graphDescription: \"A chart which displays information as a series of data points called 'markers' connected by straight line segments.\"});\n////                break;\n//            default:\n//                return(\n//                    <Plot \n//                        data={[\n//                            {\n//                            x: [1, 2, 4],\n//                            y: [2, 6, 3],\n//                            type: 'scatter',\n//                            mode: 'lines+points',\n//                            marker: {color: 'red'},\n//                            }\n//                        ]}\n//                    />\n//                )\n//        }\n    \n    }\n}\n\nexport default Graph"]},"metadata":{},"sourceType":"module"}