{"ast":null,"code":"import _createClass from \"/Users/johnrendleman/fantasybball/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/johnrendleman/fantasybball/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/johnrendleman/fantasybball/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/johnrendleman/fantasybball/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/Users/johnrendleman/fantasybball/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/Users/johnrendleman/fantasybball/src/components/StatsTable.js\";\nimport React from \"react\";\nimport ReactTable from \"react-table\";\nimport Firebase from \"./firebase\";\nimport \"react-table/react-table.css\";\n\nrequire(\"firebase\");\n\nvar firebase_client = new Firebase();\nvar player_names = firebase_client.db.ref(\"players\");\nvar names = [\"James Harden\", \"Russel Westbrook\", \"Anthony Davis\", \"LeBron James\", \"Victor Oladipo\", \"Paul George\", \"Ben Simmons\", \"John Wall\"];\nvar players = [];\n\nvar player = function player() {\n  _classCallCheck(this, player);\n\n  this.name = \"\";\n  this.points = 0;\n  this.rebounds = 0;\n  this.assists = 0;\n  this.steals = 0;\n  this.blocks = 0;\n  this.fieldGoalPercentage = 0;\n  this.threePointPercentage = 0;\n  this.freeThrowPercentage = 0;\n  this.turnovers = 0;\n};\n\nplayer_names.on('value', function (snapshot) {\n  if (snapshot.exists()) {\n    console.log(snapshot);\n    snapshot.forEach(function (data) {\n      var val = data.val(); //        console.log(val);\n      //        var new_player = new player();\n      //        new_player.name = val.name;\n      //        new_player.points = val.ppg;\n      //        new_player.rebounds = val.reb;\n      //        new_player.assists = val.ast;\n      //        //console.log(new_player.assists)\n      //        new_player.steals = val.stl;\n      //        new_player.blocks = val.blk;\n      //        new_player.fieldGoalPercentage = val.fg;\n      //        new_player.threePointPercentage = val.tpt;\n      //        new_player.freeThrowPercentage = val.ft;\n      //        new_player.turnovers = val.to;\n\n      players.push(val);\n    });\n  }\n});\n\nvar StatsTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StatsTable, _React$Component);\n\n  function StatsTable(props) {\n    _classCallCheck(this, StatsTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StatsTable).call(this, props));\n  }\n\n  _createClass(StatsTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(players[0]);\n      var columns = [{\n        Header: \"PLAYER\",\n        accessor: \"name\"\n      }, //            {\n      //                Header: \"RTG\",\n      //                accessor: \"rating\"\n      //            },\n      {\n        Header: \"PPG\",\n        accessor: \"ppg\"\n      }, {\n        Header: \"REB\",\n        accessor: \"reb\"\n      }, {\n        Header: \"STL\",\n        accessor: \"stl\"\n      }, {\n        Header: \"BLK\",\n        accessor: \"blk\"\n      }, {\n        Header: \"FG%\",\n        accessor: \"fg\"\n      }, {\n        Header: \"3PT%\",\n        accessor: \"tpt\"\n      }, {\n        Header: \"FT%\",\n        accessor: \"ft\"\n      }, {\n        Header: \"TO\",\n        accessor: \"to\"\n      }];\n      return React.createElement(ReactTable, {\n        id: \"react-table\",\n        columns: columns,\n        data: players,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return StatsTable;\n}(React.Component);\n\nexport default StatsTable;","map":{"version":3,"sources":["/Users/johnrendleman/fantasybball/src/components/StatsTable.js"],"names":["React","ReactTable","Firebase","require","firebase_client","player_names","db","ref","names","players","player","name","points","rebounds","assists","steals","blocks","fieldGoalPercentage","threePointPercentage","freeThrowPercentage","turnovers","on","snapshot","exists","console","log","forEach","data","val","push","StatsTable","props","columns","Header","accessor","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport ReactTable from \"react-table\";\nimport Firebase from \"./firebase\"\nimport \"react-table/react-table.css\"\n\nrequire(\"firebase\");\n\nconst firebase_client = new Firebase();\n\nlet player_names = firebase_client.db.ref(\"players\");\n\n\nvar names = [\"James Harden\", \"Russel Westbrook\", \"Anthony Davis\", \"LeBron James\", \"Victor Oladipo\", \"Paul George\", \"Ben Simmons\", \"John Wall\"]\nvar players = [];\n\n\nclass player {\nconstructor() {\nthis.name = \"\";\nthis.points = 0;\nthis.rebounds = 0;\nthis.assists = 0;\nthis.steals = 0;\nthis.blocks = 0;\nthis.fieldGoalPercentage = 0;\nthis.threePointPercentage = 0;\nthis.freeThrowPercentage = 0;\nthis.turnovers = 0;\n} \n}\n\n\nplayer_names.on('value', (snapshot) => {\n    if(snapshot.exists()) {\n        console.log(snapshot)\n        snapshot.forEach((data) => {\n        var val = data.val();\n//        console.log(val);\n//        var new_player = new player();\n\n//        new_player.name = val.name;\n//        new_player.points = val.ppg;\n//        new_player.rebounds = val.reb;\n//        new_player.assists = val.ast;\n//        //console.log(new_player.assists)\n//        new_player.steals = val.stl;\n//        new_player.blocks = val.blk;\n//        new_player.fieldGoalPercentage = val.fg;\n//        new_player.threePointPercentage = val.tpt;\n//        new_player.freeThrowPercentage = val.ft;\n//        new_player.turnovers = val.to;\n\n        players.push(val);\n\n        });\n    }\n});\n\n\nclass StatsTable extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    componentDidMount() {\n        \n    }\n\n    render() {\n        console.log(players[0])\n        const columns = [\n            {\n                Header: \"PLAYER\",\n                accessor: \"name\"\n            },\n//            {\n//                Header: \"RTG\",\n//                accessor: \"rating\"\n//            },\n            {\n                Header: \"PPG\",\n                accessor: \"ppg\"\n            },\n            {\n                Header: \"REB\",\n                accessor: \"reb\"\n            },\n            {\n                Header: \"STL\",\n                accessor: \"stl\"\n            },\n            {\n                Header: \"BLK\",\n                accessor: \"blk\"\n            },\n            {\n                Header: \"FG%\",\n                accessor: \"fg\"\n            },\n            {\n                Header: \"3PT%\",\n                accessor: \"tpt\"\n            },\n            {\n                Header: \"FT%\",\n                accessor: \"ft\"\n            },\n            {\n                Header: \"TO\",\n                accessor: \"to\"\n            }\n        ]\n        \n        return (\n                <ReactTable id=\"react-table\" \n                    columns={columns}\n                    data={players}/>\n        )\n    }\n}\n\n\nexport default StatsTable"]},"metadata":{},"sourceType":"module"}