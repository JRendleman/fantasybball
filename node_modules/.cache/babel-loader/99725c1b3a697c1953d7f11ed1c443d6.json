{"ast":null,"code":"import _classCallCheck from \"/Users/johnrendleman/fantasybball/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/johnrendleman/fantasybball/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/johnrendleman/fantasybball/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/johnrendleman/fantasybball/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/johnrendleman/fantasybball/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/johnrendleman/fantasybball/src/components/StatsTable.js\";\nimport React from \"react\";\nimport ReactTable from \"react-table\";\nimport Firebase from \"./firebase\";\nimport \"react-table/react-table.css\";\n\nrequire(\"firebase\");\n\nvar firebase_client = new Firebase();\nvar player_names = firebase_client.db.ref(\"players\");\nvar names = [\"James Harden\", \"Russel Westbrook\", \"Anthony Davis\", \"LeBron James\", \"Victor Oladipo\", \"Paul George\", \"Ben Simmons\", \"John Wall\"];\nvar players = [];\nplayer_names.on('value', function (snapshot) {\n  if (snapshot.exists()) {\n    snapshot.forEach(function (data) {\n      var val = data.val();\n      console.log(val);\n      var new_player = new player();\n      new_player.name = val.name;\n      new_player.points = val.ppg;\n      new_player.rebounds = val.reb;\n      new_player.assists = val.ast; //console.log(new_player.assists)\n\n      new_player.steals = val.stl;\n      new_player.blocks = val.blk;\n      new_player.fieldGoalPercentage = val.fg;\n      new_player.threePointPercentage = val.tpt;\n      new_player.freeThrowPercentage = val.ft;\n      new_player.turnovers = val.to;\n      players.push(new_player);\n    });\n  }\n});\n\nfunction addPlayerData() {\n  for (var i = 0; i < 8; i++) {\n    players.push({\n      player: names[i],\n      rating: Math.floor(Math.random() * 10 + 80),\n      rebounds: Math.floor(Math.random() * 11 + 1),\n      points: Math.floor(Math.random() * 15 + 20),\n      assists: Math.floor(Math.random() * 10 + 2),\n      steals: Math.floor(Math.random() * 3 + 0),\n      blocks: Math.floor(Math.random() * 2 + 1),\n      fieldgoal: .486,\n      threepoint: .446,\n      freethrow: 86.6,\n      turnovers: Math.floor(Math.random() * 4 + 0)\n    });\n  }\n\n  ;\n}\n\naddPlayerData();\n\nvar StatsTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StatsTable, _React$Component);\n\n  function StatsTable(props) {\n    _classCallCheck(this, StatsTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StatsTable).call(this, props));\n  }\n\n  _createClass(StatsTable, [{\n    key: \"render\",\n    value: function render() {\n      var columns = [{\n        Header: \"PLAYER\",\n        accessor: \"player\"\n      }, {\n        Header: \"RTG\",\n        accessor: \"rating\"\n      }, {\n        Header: \"PPG\",\n        accessor: \"points\"\n      }, {\n        Header: \"REB\",\n        accessor: \"rebounds\"\n      }, {\n        Header: \"STL\",\n        accessor: \"steals\"\n      }, {\n        Header: \"BLK\",\n        accessor: \"blocks\"\n      }, {\n        Header: \"FG%\",\n        accessor: \"fieldgoal\"\n      }, {\n        Header: \"3PT%\",\n        accessor: \"threepoint\"\n      }, {\n        Header: \"FT%\",\n        accessor: \"freethrow\"\n      }, {\n        Header: \"TO\",\n        accessor: \"turnovers\"\n      }];\n      return React.createElement(ReactTable, {\n        id: \"react-table\",\n        columns: columns,\n        data: players,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return StatsTable;\n}(React.Component);\n\nexport default StatsTable;","map":{"version":3,"sources":["/Users/johnrendleman/fantasybball/src/components/StatsTable.js"],"names":["React","ReactTable","Firebase","require","firebase_client","player_names","db","ref","names","players","on","snapshot","exists","forEach","data","val","console","log","new_player","player","name","points","ppg","rebounds","reb","assists","ast","steals","stl","blocks","blk","fieldGoalPercentage","fg","threePointPercentage","tpt","freeThrowPercentage","ft","turnovers","to","push","addPlayerData","i","rating","Math","floor","random","fieldgoal","threepoint","freethrow","StatsTable","props","columns","Header","accessor","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport ReactTable from \"react-table\";\nimport Firebase from \"./firebase\"\nimport \"react-table/react-table.css\"\n\nrequire(\"firebase\");\n\nconst firebase_client = new Firebase();\n\nlet player_names = firebase_client.db.ref(\"players\");\n\n\nvar names = [\"James Harden\", \"Russel Westbrook\", \"Anthony Davis\", \"LeBron James\", \"Victor Oladipo\", \"Paul George\", \"Ben Simmons\", \"John Wall\"]\nvar players = [];\n\n\n\n\n\nplayer_names.on('value', (snapshot) => {\n    if(snapshot.exists()) {\n        snapshot.forEach((data) => {\n        var val = data.val();\n        console.log(val);\n        var new_player = new player();\n\n        new_player.name = val.name;\n        new_player.points = val.ppg;\n        new_player.rebounds = val.reb;\n        new_player.assists = val.ast;\n        //console.log(new_player.assists)\n        new_player.steals = val.stl;\n        new_player.blocks = val.blk;\n        new_player.fieldGoalPercentage = val.fg;\n        new_player.threePointPercentage = val.tpt;\n        new_player.freeThrowPercentage = val.ft;\n        new_player.turnovers = val.to;\n\n        players.push(new_player);\n\n        });\n    }\n});\n\n\n\nfunction addPlayerData() {\n    for (var i = 0; i < 8; i++) {\n        players.push({\n            player: names[i],\n            rating: Math.floor((Math.random() * 10) + 80),\n            rebounds: Math.floor((Math.random() * 11) + 1),\n            points: Math.floor((Math.random() * 15) + 20),\n            assists: Math.floor((Math.random() * 10) + 2),\n            steals: Math.floor((Math.random() * 3) + 0),\n            blocks: Math.floor((Math.random() * 2) + 1),\n            fieldgoal: .486,\n            threepoint: .446,\n            freethrow: 86.6,\n            turnovers: Math.floor((Math.random() * 4) + 0)\n            \n        })\n    };\n}\n\naddPlayerData();\n\nclass StatsTable extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const columns = [\n            {\n                Header: \"PLAYER\",\n                accessor: \"player\"\n            },\n            {\n                Header: \"RTG\",\n                accessor: \"rating\"\n            },\n            {\n                Header: \"PPG\",\n                accessor: \"points\"\n            },\n            {\n                Header: \"REB\",\n                accessor: \"rebounds\"\n            },\n            {\n                Header: \"STL\",\n                accessor: \"steals\"\n            },\n            {\n                Header: \"BLK\",\n                accessor: \"blocks\"\n            },\n            {\n                Header: \"FG%\",\n                accessor: \"fieldgoal\"\n            },\n            {\n                Header: \"3PT%\",\n                accessor: \"threepoint\"\n            },\n            {\n                Header: \"FT%\",\n                accessor: \"freethrow\"\n            },\n            {\n                Header: \"TO\",\n                accessor: \"turnovers\"\n            }\n        ]\n        \n        return (\n                <ReactTable id=\"react-table\" \n                    columns={columns}\n                    data={players}/>\n        )\n    }\n}\n\n\nexport default StatsTable"]},"metadata":{},"sourceType":"module"}